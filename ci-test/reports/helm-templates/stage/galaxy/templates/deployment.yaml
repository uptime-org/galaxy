---
# Source: galaxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galaxy-stage
  namespace: stage
  labels:
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: galaxy
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/environment: stage
    app.kubernetes.io/team: 
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: galaxy
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: galaxy
        app.kubernetes.io/environment: stage
        app.kubernetes.io/team: 
    spec:
      serviceAccountName: galaxy-stage
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: galaxy
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
          image: "galaxy/hello-world:test"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 300m
              memory: 384Mi
            requests:
              cpu: 75m
              memory: 96Mi
          env:
            - name: ENVIRONMENT
              value: "stage"
            - name: APP_NAME
              value: galaxy-stage
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: galaxy-stage-secrets
                  key: password
          volumeMounts:
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: galaxy-stage-secrets
